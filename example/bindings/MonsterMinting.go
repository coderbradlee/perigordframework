// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// MonsterMintingABI is the input ABI used to generate the binding from.
const MonsterMintingABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_preferredTransport\",\"type\":\"string\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"name\":\"infoUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"promoCreatedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GEN0_STARTING_PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setSiringAuctionAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_monsterId\",\"type\":\"uint256\"}],\"name\":\"isPregnant\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GEN0_AUCTION_DURATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"siringAuction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setGeneScienceAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_monsterId\",\"type\":\"uint256\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"createSaleAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sireAllowedToAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_matronId\",\"type\":\"uint256\"},{\"name\":\"_sireId\",\"type\":\"uint256\"}],\"name\":\"canBreedWith\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_monsterId\",\"type\":\"uint256\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"createSiringAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setAutoBirthFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_sireId\",\"type\":\"uint256\"}],\"name\":\"approveSiring\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCFO\",\"type\":\"address\"}],\"name\":\"setCFO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"secs\",\"type\":\"uint256\"}],\"name\":\"setSecondsPerBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GEN0_CREATION_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setSaleAuctionAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondsPerBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monsterIndexToApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"ownerTokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_matronId\",\"type\":\"uint256\"}],\"name\":\"giveBirth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_genes\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createPromoMonster\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAuctionBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cooldowns\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monsterIndexToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"autoBirthFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc721Metadata\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_genes\",\"type\":\"uint256\"}],\"name\":\"createGen0Auction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pregnantMonsters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_monsterId\",\"type\":\"uint256\"}],\"name\":\"isReadyToBreed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROMO_CREATION_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setMetadataAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleAuction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sireId\",\"type\":\"uint256\"},{\"name\":\"_matronId\",\"type\":\"uint256\"}],\"name\":\"bidOnSiringAuction\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gen0CreatedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"geneScience\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_matronId\",\"type\":\"uint256\"},{\"name\":\"_sireId\",\"type\":\"uint256\"}],\"name\":\"breedWithAuto\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"matronId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sireId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cooldownEndBlock\",\"type\":\"uint256\"}],\"name\":\"Pregnant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"MonsterId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"matronId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sireId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"genes\",\"type\":\"uint256\"}],\"name\":\"Birth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"}]"

// MonsterMintingBin is the compiled bytecode used for deploying new contracts.
const MonsterMintingBin = `6002805460a060020a60ff0219169055610240604052603c6080908152607860a05261012c60c05261025860e05261070861010052610e1061012052611c2061014052613840610160526170806101805261e1006101a052620151806101c0526202a3006101e052620546006102005262093a80610220526200008790600390600e620000ac565b50600f60055566071afd498d0000600e55348015620000a557600080fd5b5062000176565b6002830191839082156200013d5791602002820160005b838211156200010957835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302620000c3565b80156200013b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000109565b505b506200014b9291506200014f565b5090565b6200017391905b808211156200014b57805463ffffffff1916815560010162000156565b90565b612d1280620001866000396000f3006080604052600436106102795763ffffffff60e060020a60003504166301ffc9a7811461027e5780630519ce79146102c95780630560ff44146102fa57806305e455461461039357806306fdde03146103ba578063095ea7b3146103cf5780630a0f8168146103f55780630e583df01461040a57806314001f4c1461041f57806318160ddd146104405780631940a9361461045557806319c2f2011461046d57806321717ebf1461048257806323b872dd1461049757806324e7a38a146104c157806327d7874c146104e25780632ba73c15146105035780633d7d3f5a146105245780633f4ba83a1461054557806346116e6f1461055a57806346d22c70146105725780634ad8c9381461058d5780634b85fd55146105ae5780634dfff04f146105c65780634e0a3379146105ea5780635663896e1461060b5780635c975abb146106235780636352211e14610638578063680eba27146106505780636fbde40d1461066557806370a08231146106865780637a7d4937146106a75780637d55aeea146106bc5780638456cb59146106d45780638462151c146106e957806388c2a0bf1461075a5780638b56aff81461077257806391876e571461079657806395d89b41146107ab5780639d6fac6f146107c0578063a9059cbb146107f1578063ad4b558c14610815578063b047fb501461082d578063b0c35c0514610842578063bc4006f514610857578063c3bea9af1461086c578063c7e3ff4b14610884578063d3e6f49f14610899578063defb9584146108b1578063e17b25af146108c6578063e6cbe351146108e7578063ed60ade6146108fc578063f1ca94101461090a578063f2b47d521461091f578063f7d8c88314610934575b600080fd5b34801561028a57600080fd5b506102b57bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1960043516610942565b604080519115158252519081900360200190f35b3480156102d557600080fd5b506102de610bd5565b60408051600160a060020a039092168252519081900360200190f35b34801561030657600080fd5b5061031e600480359060248035908101910135610be4565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610358578181015183820152602001610340565b50505050905090810190601f1680156103855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561039f57600080fd5b506103a8610ce7565b60408051918252519081900360200190f35b3480156103c657600080fd5b5061031e610ced565b3480156103db57600080fd5b506103f3600160a060020a0360043516602435610d24565b005b34801561040157600080fd5b506102de610da6565b34801561041657600080fd5b506103a8610db5565b34801561042b57600080fd5b506103f3600160a060020a0360043516610dc0565b34801561044c57600080fd5b506103a8610e73565b34801561046157600080fd5b506102b5600435610e7d565b34801561047957600080fd5b506103a8610ec2565b34801561048e57600080fd5b506102de610ec9565b3480156104a357600080fd5b506103f3600160a060020a0360043581169060243516604435610ed8565b3480156104cd57600080fd5b506103f3600160a060020a0360043516610f54565b3480156104ee57600080fd5b506103f3600160a060020a0360043516611007565b34801561050f57600080fd5b506103f3600160a060020a0360043516611055565b34801561053057600080fd5b506103f36004356024356044356064356110a3565b34801561055157600080fd5b506103f3611198565b34801561056657600080fd5b506102de6004356111e7565b34801561057e57600080fd5b506102b5600435602435611202565b34801561059957600080fd5b506103f3600435602435604435606435611282565b3480156105ba57600080fd5b506103f360043561135a565b3480156105d257600080fd5b506103f3600160a060020a0360043516602435611376565b3480156105f657600080fd5b506103f3600160a060020a03600435166113d0565b34801561061757600080fd5b506103f360043561141e565b34801561062f57600080fd5b506102b561147a565b34801561064457600080fd5b506102de60043561148a565b34801561065c57600080fd5b506103a86114ae565b34801561067157600080fd5b506103f3600160a060020a03600435166114b4565b34801561069257600080fd5b506103a8600160a060020a0360043516611567565b3480156106b357600080fd5b506103a8611582565b3480156106c857600080fd5b506102de600435611588565b3480156106e057600080fd5b506103f36115a3565b3480156106f557600080fd5b5061070a600160a060020a0360043516611623565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561074657818101518382015260200161072e565b505050509050019250505060405180910390f35b34801561076657600080fd5b506103a86004356116f5565b34801561077e57600080fd5b506103f3600435600160a060020a03602435166119d1565b3480156107a257600080fd5b506103f3611a3a565b3480156107b757600080fd5b5061031e611b4f565b3480156107cc57600080fd5b506107d8600435611b86565b6040805163ffffffff9092168252519081900360200190f35b3480156107fd57600080fd5b506103f3600160a060020a0360043516602435611bb3565b34801561082157600080fd5b506102de600435611c4f565b34801561083957600080fd5b506102de611c6a565b34801561084e57600080fd5b506103a8611c79565b34801561086357600080fd5b506102de611c7f565b34801561087857600080fd5b506103f3600435611c8e565b34801561089057600080fd5b506103a8611d78565b3480156108a557600080fd5b506102b5600435611d7e565b3480156108bd57600080fd5b506103a8611e4d565b3480156108d257600080fd5b506103f3600160a060020a0360043516611e55565b3480156108f357600080fd5b506102de611e8e565b6103f3600435602435611e9d565b34801561091657600080fd5b506103a8612037565b34801561092b57600080fd5b506102de61203d565b6103f360043560243561204c565b604080517f737570706f727473496e74657266616365286279746573342900000000000000815290519081900360190190206000907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1983811691161480610bcd5750604080517f746f6b656e4d657461646174612875696e743235362c737472696e67290000008152815190819003601d0181207f746f6b656e734f664f776e657228616464726573732900000000000000000000825282519182900360160182207f7472616e7366657246726f6d28616464726573732c616464726573732c75696e83527f7432353629000000000000000000000000000000000000000000000000000000602084015283519283900360250183207f7472616e7366657228616464726573732c75696e743235362900000000000000845284519384900360190184207f617070726f766528616464726573732c75696e74323536290000000000000000855285519485900360180185207f6f776e65724f662875696e743235362900000000000000000000000000000000865286519586900360100186207f62616c616e63654f662861646472657373290000000000000000000000000000875287519687900360120187207f746f74616c537570706c792829000000000000000000000000000000000000008852885197889003600d0188207f73796d626f6c2829000000000000000000000000000000000000000000000000895289519889900360080189207f6e616d65282900000000000000000000000000000000000000000000000000008a529951988990036006019098207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff198c811691909a189098181818181818181891909116145b90505b919050565b600154600160a060020a031681565b6060610bee612c83565b600d54600090600160a060020a03161515610c0857600080fd5b600d54604080517fcb4799f2000000000000000000000000000000000000000000000000000000008152600481018981526024820192835260448201889052600160a060020a039093169263cb4799f2928a928a928a929091606401848480828437820191505094505050505060a060405180830381600087803b158015610c8f57600080fd5b505af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060a0811015610cc857600080fd5b5060808101519092509050610cdd828261224a565b9695505050505050565b60115481565b60408051808201909152600781527f6d6f6e7374657200000000000000000000000000000000000000000000000000602082015281565b60025460a060020a900460ff1615610d3b57600080fd5b610d45338261229e565b1515610d5057600080fd5b610d5a81836122be565b60408051338152600160a060020a038416602082015280820183905290517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259181900360600190a15050565b600054600160a060020a031681565b662386f26fc1000081565b60008054600160a060020a03163314610dd857600080fd5b81905080600160a060020a03166376190f8f6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610e1957600080fd5b505af1158015610e2d573d6000803e3d6000fd5b505050506040513d6020811015610e4357600080fd5b50511515610e5057600080fd5b600c8054600160a060020a031916600160a060020a039290921691909117905550565b6006546000190190565b6000808211610e8b57600080fd5b6006805483908110610e9957fe5b600091825260209091206002909102016001015460c060020a900463ffffffff16151592915050565b6201518081565b600c54600160a060020a031681565b60025460a060020a900460ff1615610eef57600080fd5b600160a060020a0382161515610f0457600080fd5b600160a060020a038216301415610f1a57600080fd5b610f2433826122ec565b1515610f2f57600080fd5b610f39838261229e565b1515610f4457600080fd5b610f4f83838361230c565b505050565b60008054600160a060020a03163314610f6c57600080fd5b81905080600160a060020a03166354c15b826040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610fad57600080fd5b505af1158015610fc1573d6000803e3d6000fd5b505050506040513d6020811015610fd757600080fd5b50511515610fe457600080fd5b60108054600160a060020a031916600160a060020a039290921691909117905550565b600054600160a060020a0316331461101e57600080fd5b600160a060020a038116151561103357600080fd5b60008054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a0316331461106c57600080fd5b600160a060020a038116151561108157600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b60025460a060020a900460ff16156110ba57600080fd5b6110c4338561229e565b15156110cf57600080fd5b6110d884610e7d565b156110e257600080fd5b600b546110f9908590600160a060020a03166122be565b600b54604080517f27ebe40a000000000000000000000000000000000000000000000000000000008152600481018790526024810186905260448101859052606481018490523360848201529051600160a060020a03909216916327ebe40a9160a48082019260009290919082900301818387803b15801561117a57600080fd5b505af115801561118e573d6000803e3d6000fd5b5050505050505050565b600054600160a060020a031633146111af57600080fd5b60025460a060020a900460ff1615156111c757600080fd5b6002805474ff000000000000000000000000000000000000000019169055565b600a60205260009081526040902054600160a060020a031681565b6000808080851161121257600080fd5b6000841161121f57600080fd5b600680548690811061122d57fe5b9060005260206000209060020201915060068481548110151561124c57fe5b90600052602060002090600202019050611268828683876123ee565b80156112795750611279848661256e565b95945050505050565b60025460a060020a900460ff161561129957600080fd5b6112a3338561229e565b15156112ae57600080fd5b6112b784611d7e565b15156112c257600080fd5b600c546112d9908590600160a060020a03166122be565b600c54604080517f27ebe40a000000000000000000000000000000000000000000000000000000008152600481018790526024810186905260448101859052606481018490523360848201529051600160a060020a03909216916327ebe40a9160a48082019260009290919082900301818387803b15801561117a57600080fd5b600254600160a060020a0316331461137157600080fd5b600e55565b60025460a060020a900460ff161561138d57600080fd5b611397338261229e565b15156113a257600080fd5b6000908152600a602052604090208054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146113e757600080fd5b600160a060020a03811615156113fc57600080fd5b60018054600160a060020a031916600160a060020a0392909216919091179055565b600254600160a060020a03163314806114415750600054600160a060020a031633145b806114565750600154600160a060020a031633145b151561146157600080fd5b60035463ffffffff16811061147557600080fd5b600555565b60025460a060020a900460ff1681565b600081815260076020526040902054600160a060020a0316801515610bd057600080fd5b61afc881565b60008054600160a060020a031633146114cc57600080fd5b81905080600160a060020a03166385b861886040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561150d57600080fd5b505af1158015611521573d6000803e3d6000fd5b505050506040513d602081101561153757600080fd5b5051151561154457600080fd5b600b8054600160a060020a031916600160a060020a039290921691909117905550565b600160a060020a031660009081526008602052604090205490565b60055481565b600960205260009081526040902054600160a060020a031681565b600254600160a060020a03163314806115c65750600054600160a060020a031633145b806115db5750600154600160a060020a031633145b15156115e657600080fd5b60025460a060020a900460ff16156115fd57600080fd5b6002805474ff0000000000000000000000000000000000000000191660a060020a179055565b606060006060600080600061163787611567565b94508415156116565760408051600081526020810190915295506116eb565b84604051908082528060200260200182016040528015611680578160200160208202803883390190505b50935061168b610e73565b925060009150600190505b8281116116e757600081815260076020526040902054600160a060020a03888116911614156116df578084838151811015156116ce57fe5b602090810290910101526001909101905b600101611696565b8395505b5050505050919050565b600080600080600080600080600260149054906101000a900460ff1615151561171d57600080fd5b600680548a90811061172b57fe5b60009182526020909120600290910201600181015490975067ffffffffffffffff16151561175857600080fd5b604080516101008101825288548152600189015467ffffffffffffffff8082166020840152680100000000000000008204169282019290925263ffffffff608060020a83048116606083015260a060020a83048116608083015260c060020a83041660a082015261ffff60e060020a8304811660c083015260f060020a90920490911660e08201526117e9906125c3565b15156117f457600080fd5b60018701546006805460c060020a90920463ffffffff169750908790811061181857fe5b600091825260209091206001808a015460029093029091019081015490965061ffff60f060020a92839004811696509190041684101561186557600185015460f060020a900461ffff1693505b6010548754865460018a0154604080517f0d9f5aed0000000000000000000000000000000000000000000000000000000081526004810194909452602484019290925260001967ffffffffffffffff6801000000000000000090920482160116604483015251600160a060020a0390921691630d9f5aed916064808201926020929091908290030181600087803b1580156118ff57600080fd5b505af1158015611913573d6000803e3d6000fd5b505050506040513d602081101561192957600080fd5b505160008a815260076020526040902054600189810154929550600160a060020a039091169350611972918b9160c060020a90910463ffffffff1690870161ffff1686866125f3565b6001880180547bffffffff00000000000000000000000000000000000000000000000019169055600f8054600019019055600e54604051919250339181156108fc0291906000818181858888f150939c9b505050505050505050505050565b600254600090600160a060020a031633146119eb57600080fd5b5080600160a060020a0381161515611a0b5750600254600160a060020a03165b601154631dcd650011611a1d57600080fd5b601180546001019055611a346000808086856125f3565b50505050565b600254600160a060020a0316331480611a5d5750600054600160a060020a031633145b80611a725750600154600160a060020a031633145b1515611a7d57600080fd5b600b60009054906101000a9004600160a060020a0316600160a060020a0316635fd8c7106040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015611ad057600080fd5b505af1158015611ae4573d6000803e3d6000fd5b50505050600c60009054906101000a9004600160a060020a0316600160a060020a0316635fd8c7106040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015611b3b57600080fd5b505af1158015611a34573d6000803e3d6000fd5b60408051808201909152600281527f4d52000000000000000000000000000000000000000000000000000000000000602082015281565b600381600e8110611b9357fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b60025460a060020a900460ff1615611bca57600080fd5b600160a060020a0382161515611bdf57600080fd5b600160a060020a038216301415611bf557600080fd5b600b54600160a060020a0383811691161415611c1057600080fd5b600c54600160a060020a0383811691161415611c2b57600080fd5b611c35338261229e565b1515611c4057600080fd5b611c4b33838361230c565b5050565b600760205260009081526040902054600160a060020a031681565b600254600160a060020a031681565b600e5481565b600d54600160a060020a031681565b600254600090600160a060020a03163314611ca857600080fd5b60125461afc811611cb857600080fd5b611cc7600080600085306125f3565b600b54909150611ce1908290600160a060020a03166122be565b600b54600160a060020a03166327ebe40a82611cfb6128d0565b6040805160e060020a63ffffffff861602815260048101939093526024830191909152600060448301819052620151806064840152306084840152905160a48084019382900301818387803b158015611d5357600080fd5b505af1158015611d67573d6000803e3d6000fd5b505060128054600101905550505050565b600f5481565b600080808311611d8d57600080fd5b6006805484908110611d9b57fe5b60009182526020918290206040805161010081018252600290930290910180548352600181015467ffffffffffffffff808216958501959095526801000000000000000081049094169183019190915263ffffffff608060020a84048116606084015260a060020a84048116608084015260c060020a84041660a083015261ffff60e060020a8404811660c084015260f060020a90930490921660e0820152909150611e469061299a565b9392505050565b631dcd650081565b600054600160a060020a03163314611e6c57600080fd5b600d8054600160a060020a031916600160a060020a0392909216919091179055565b600b54600160a060020a031681565b60025460009060a060020a900460ff1615611eb757600080fd5b611ec1338361229e565b1515611ecc57600080fd5b611ed582611d7e565b1515611ee057600080fd5b611eea82846129c9565b1515611ef557600080fd5b600c54604080517fc55d0f56000000000000000000000000000000000000000000000000000000008152600481018690529051600160a060020a039092169163c55d0f56916024808201926020929091908290030181600087803b158015611f5c57600080fd5b505af1158015611f70573d6000803e3d6000fd5b505050506040513d6020811015611f8657600080fd5b5051600e549091508101341015611f9c57600080fd5b600c54600e54604080517f454a2ab3000000000000000000000000000000000000000000000000000000008152600481018790529051600160a060020a039093169263454a2ab39234039160248082019260009290919082900301818588803b15801561200857600080fd5b505af115801561201c573d6000803e3d6000fd5b5050505050610f4f8263ffffffff168463ffffffff16612a18565b60125481565b601054600160a060020a031681565b600254600090819060a060020a900460ff161561206857600080fd5b600e5434101561207757600080fd5b612081338561229e565b151561208c57600080fd5b612096838561256e565b15156120a157600080fd5b60068054859081106120af57fe5b60009182526020918290206040805161010081018252600290930290910180548352600181015467ffffffffffffffff808216958501959095526801000000000000000081049094169183019190915263ffffffff608060020a84048116606084015260a060020a84048116608084015260c060020a84041660a083015261ffff60e060020a8404811660c084015260f060020a90930490921660e082015290925061215a9061299a565b151561216557600080fd5b600680548490811061217357fe5b60009182526020918290206040805161010081018252600290930290910180548352600181015467ffffffffffffffff808216958501959095526801000000000000000081049094169183019190915263ffffffff608060020a84048116606084015260a060020a84048116608084015260c060020a84041660a083015261ffff60e060020a8404811660c084015260f060020a90930490921660e082015290915061221e9061299a565b151561222957600080fd5b612235828583866123ee565b151561224057600080fd5b611a348484612a18565b606080600080846040519080825280601f01601f19166020018201604052801561227e578160200160208202803883390190505b5092505060208201905084612294828287612b56565b5090949350505050565b600090815260076020526040902054600160a060020a0391821691161490565b6000918252600960205260409091208054600160a060020a031916600160a060020a03909216919091179055565b600090815260096020526040902054600160a060020a0391821691161490565b600160a060020a03808316600081815260086020908152604080832080546001019055858352600790915290208054600160a060020a031916909117905583161561239f57600160a060020a03831660009081526008602090815260408083208054600019019055838352600a82528083208054600160a060020a03199081169091556009909252909120805490911690555b60408051600160a060020a0380861682528416602082015280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050565b60008184141561240057506000612566565b6001850154608060020a900463ffffffff1682148061242f5750600185015460a060020a900463ffffffff1682145b1561243c57506000612566565b6001830154608060020a900463ffffffff1684148061246b5750600183015460a060020a900463ffffffff1684145b1561247857506000612566565b6001830154608060020a900463ffffffff1615806124a557506001850154608060020a900463ffffffff16155b156124b257506001612566565b60018581015490840154608060020a9182900463ffffffff908116929091041614806124fd575060018086015490840154608060020a900463ffffffff90811660a060020a90920416145b1561250a57506000612566565b6001808601549084015460a060020a900463ffffffff908116608060020a90920416148061255557506001858101549084015460a060020a9182900463ffffffff9081169290910416145b1561256257506000612566565b5060015b949350505050565b6000818152600760205260408082205484835290822054600160a060020a0391821691168082148061127957506000858152600a6020526040902054600160a060020a03908116908316149250505092915050565b60008160a0015163ffffffff16600014158015610bcd5750506040015167ffffffffffffffff4381169116111590565b6000806125fe612ca2565b600063ffffffff8916891461261257600080fd5b63ffffffff8816881461262457600080fd5b61ffff8716871461263457600080fd5b600287049250600d8361ffff16111561264c57600d92505b505060408051610100810182528581524267ffffffffffffffff90811660208301908152600093830184815263ffffffff8c8116606086019081528c82166080870190815260a0870188815261ffff8a811660c08a019081528f821660e08b01908152600680546001810182559c528a517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60028e029081019190915598517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40909901805498519651955194519251915167ffffffffffffffff19909916998b16999099176fffffffffffffffff000000000000000019166801000000000000000096909a16959095029890981773ffffffff000000000000000000000000000000001916608060020a938616939093029290921777ffffffff0000000000000000000000000000000000000000191660a060020a91851691909102177bffffffff000000000000000000000000000000000000000000000000191660c060020a96841696909602959095177fffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660e060020a91861691909102177dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660f060020a92909416919091029290921790559091908116811461284a57600080fd5b606080830151608080850151855160408051600160a060020a038c1681526020810188905263ffffffff95861681830152929094169482019490945290810192909252517f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad59181900360a00190a16128c46000868361230c565b98975050505050505050565b6000806000600b60009054906101000a9004600160a060020a0316600160a060020a031663eac9d94c6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561292857600080fd5b505af115801561293c573d6000803e3d6000fd5b505050506040513d602081101561295257600080fd5b505191506fffffffffffffffffffffffffffffffff8216821461297457600080fd5b50600281048101662386f26fc100008110156129945750662386f26fc100005b92915050565b60008160a0015163ffffffff166000148015610bcd5750506040015167ffffffffffffffff4381169116111590565b60008060006006858154811015156129dd57fe5b906000526020600020906002020191506006848154811015156129fc57fe5b90600052602060002090600202019050611279828683876123ee565b600080600683815481101515612a2a57fe5b90600052602060002090600202019150600684815481101515612a4957fe5b600091825260209091206002909102016001810180547bffffffff000000000000000000000000000000000000000000000000191660c060020a63ffffffff8716021790559050612a9982612b9a565b612aa281612b9a565b6000848152600a602090815260408083208054600160a060020a031990811690915586845281842080549091169055600f80546001908101909155878452600783529281902054928401548151600160a060020a0390941684529183018790528281018690526801000000000000000090910467ffffffffffffffff166060830152517f241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80916080908290030190a150505050565b60005b60208210612b7b578251845260209384019390920191601f1990910190612b59565b50905182516020929092036101000a6000190180199091169116179052565b600554600182015443919060039060e060020a900461ffff16600e8110612bbd57fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16811515612be857fe5b6001840180546fffffffffffffffff0000000000000000191668010000000000000000939092049390930167ffffffffffffffff16919091021790819055600d60e060020a90910461ffff161015612c80576001818101805461ffff60e060020a8083048216909401169092027fffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092169190911790555b50565b6080604051908101604052806004906020820280388339509192915050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152905600a165627a7a7230582015be69ec98f6aaeb1d24e8df6ffaee9de2dff793cee89450f698bb6edf01e7540029`

// DeployMonsterMinting deploys a new Ethereum contract, binding an instance of MonsterMinting to it.
func DeployMonsterMinting(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *MonsterMinting, error) {
	parsed, err := abi.JSON(strings.NewReader(MonsterMintingABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MonsterMintingBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MonsterMinting{MonsterMintingCaller: MonsterMintingCaller{contract: contract}, MonsterMintingTransactor: MonsterMintingTransactor{contract: contract}, MonsterMintingFilterer: MonsterMintingFilterer{contract: contract}}, nil
}

// MonsterMinting is an auto generated Go binding around an Ethereum contract.
type MonsterMinting struct {
	MonsterMintingCaller     // Read-only binding to the contract
	MonsterMintingTransactor // Write-only binding to the contract
	MonsterMintingFilterer   // Log filterer for contract events
}

// MonsterMintingCaller is an auto generated read-only Go binding around an Ethereum contract.
type MonsterMintingCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MonsterMintingTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MonsterMintingTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MonsterMintingFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MonsterMintingFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MonsterMintingSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MonsterMintingSession struct {
	Contract     *MonsterMinting   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MonsterMintingCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MonsterMintingCallerSession struct {
	Contract *MonsterMintingCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// MonsterMintingTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MonsterMintingTransactorSession struct {
	Contract     *MonsterMintingTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// MonsterMintingRaw is an auto generated low-level Go binding around an Ethereum contract.
type MonsterMintingRaw struct {
	Contract *MonsterMinting // Generic contract binding to access the raw methods on
}

// MonsterMintingCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MonsterMintingCallerRaw struct {
	Contract *MonsterMintingCaller // Generic read-only contract binding to access the raw methods on
}

// MonsterMintingTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MonsterMintingTransactorRaw struct {
	Contract *MonsterMintingTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMonsterMinting creates a new instance of MonsterMinting, bound to a specific deployed contract.
func NewMonsterMinting(address common.Address, backend bind.ContractBackend) (*MonsterMinting, error) {
	contract, err := bindMonsterMinting(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MonsterMinting{MonsterMintingCaller: MonsterMintingCaller{contract: contract}, MonsterMintingTransactor: MonsterMintingTransactor{contract: contract}, MonsterMintingFilterer: MonsterMintingFilterer{contract: contract}}, nil
}

// NewMonsterMintingCaller creates a new read-only instance of MonsterMinting, bound to a specific deployed contract.
func NewMonsterMintingCaller(address common.Address, caller bind.ContractCaller) (*MonsterMintingCaller, error) {
	contract, err := bindMonsterMinting(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MonsterMintingCaller{contract: contract}, nil
}

// NewMonsterMintingTransactor creates a new write-only instance of MonsterMinting, bound to a specific deployed contract.
func NewMonsterMintingTransactor(address common.Address, transactor bind.ContractTransactor) (*MonsterMintingTransactor, error) {
	contract, err := bindMonsterMinting(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MonsterMintingTransactor{contract: contract}, nil
}

// NewMonsterMintingFilterer creates a new log filterer instance of MonsterMinting, bound to a specific deployed contract.
func NewMonsterMintingFilterer(address common.Address, filterer bind.ContractFilterer) (*MonsterMintingFilterer, error) {
	contract, err := bindMonsterMinting(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MonsterMintingFilterer{contract: contract}, nil
}

// bindMonsterMinting binds a generic wrapper to an already deployed contract.
func bindMonsterMinting(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MonsterMintingABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MonsterMinting *MonsterMintingRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MonsterMinting.Contract.MonsterMintingCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MonsterMinting *MonsterMintingRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MonsterMinting.Contract.MonsterMintingTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MonsterMinting *MonsterMintingRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MonsterMinting.Contract.MonsterMintingTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MonsterMinting *MonsterMintingCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MonsterMinting.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MonsterMinting *MonsterMintingTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MonsterMinting.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MonsterMinting *MonsterMintingTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MonsterMinting.Contract.contract.Transact(opts, method, params...)
}

// GEN0AUCTIONDURATION is a free data retrieval call binding the contract method 0x19c2f201.
//
// Solidity: function GEN0_AUCTION_DURATION() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) GEN0AUCTIONDURATION(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "GEN0_AUCTION_DURATION")
	return *ret0, err
}

// GEN0AUCTIONDURATION is a free data retrieval call binding the contract method 0x19c2f201.
//
// Solidity: function GEN0_AUCTION_DURATION() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) GEN0AUCTIONDURATION() (*big.Int, error) {
	return _MonsterMinting.Contract.GEN0AUCTIONDURATION(&_MonsterMinting.CallOpts)
}

// GEN0AUCTIONDURATION is a free data retrieval call binding the contract method 0x19c2f201.
//
// Solidity: function GEN0_AUCTION_DURATION() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) GEN0AUCTIONDURATION() (*big.Int, error) {
	return _MonsterMinting.Contract.GEN0AUCTIONDURATION(&_MonsterMinting.CallOpts)
}

// GEN0CREATIONLIMIT is a free data retrieval call binding the contract method 0x680eba27.
//
// Solidity: function GEN0_CREATION_LIMIT() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) GEN0CREATIONLIMIT(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "GEN0_CREATION_LIMIT")
	return *ret0, err
}

// GEN0CREATIONLIMIT is a free data retrieval call binding the contract method 0x680eba27.
//
// Solidity: function GEN0_CREATION_LIMIT() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) GEN0CREATIONLIMIT() (*big.Int, error) {
	return _MonsterMinting.Contract.GEN0CREATIONLIMIT(&_MonsterMinting.CallOpts)
}

// GEN0CREATIONLIMIT is a free data retrieval call binding the contract method 0x680eba27.
//
// Solidity: function GEN0_CREATION_LIMIT() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) GEN0CREATIONLIMIT() (*big.Int, error) {
	return _MonsterMinting.Contract.GEN0CREATIONLIMIT(&_MonsterMinting.CallOpts)
}

// GEN0STARTINGPRICE is a free data retrieval call binding the contract method 0x0e583df0.
//
// Solidity: function GEN0_STARTING_PRICE() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) GEN0STARTINGPRICE(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "GEN0_STARTING_PRICE")
	return *ret0, err
}

// GEN0STARTINGPRICE is a free data retrieval call binding the contract method 0x0e583df0.
//
// Solidity: function GEN0_STARTING_PRICE() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) GEN0STARTINGPRICE() (*big.Int, error) {
	return _MonsterMinting.Contract.GEN0STARTINGPRICE(&_MonsterMinting.CallOpts)
}

// GEN0STARTINGPRICE is a free data retrieval call binding the contract method 0x0e583df0.
//
// Solidity: function GEN0_STARTING_PRICE() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) GEN0STARTINGPRICE() (*big.Int, error) {
	return _MonsterMinting.Contract.GEN0STARTINGPRICE(&_MonsterMinting.CallOpts)
}

// PROMOCREATIONLIMIT is a free data retrieval call binding the contract method 0xdefb9584.
//
// Solidity: function PROMO_CREATION_LIMIT() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) PROMOCREATIONLIMIT(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "PROMO_CREATION_LIMIT")
	return *ret0, err
}

// PROMOCREATIONLIMIT is a free data retrieval call binding the contract method 0xdefb9584.
//
// Solidity: function PROMO_CREATION_LIMIT() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) PROMOCREATIONLIMIT() (*big.Int, error) {
	return _MonsterMinting.Contract.PROMOCREATIONLIMIT(&_MonsterMinting.CallOpts)
}

// PROMOCREATIONLIMIT is a free data retrieval call binding the contract method 0xdefb9584.
//
// Solidity: function PROMO_CREATION_LIMIT() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) PROMOCREATIONLIMIT() (*big.Int, error) {
	return _MonsterMinting.Contract.PROMOCREATIONLIMIT(&_MonsterMinting.CallOpts)
}

// AutoBirthFee is a free data retrieval call binding the contract method 0xb0c35c05.
//
// Solidity: function autoBirthFee() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) AutoBirthFee(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "autoBirthFee")
	return *ret0, err
}

// AutoBirthFee is a free data retrieval call binding the contract method 0xb0c35c05.
//
// Solidity: function autoBirthFee() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) AutoBirthFee() (*big.Int, error) {
	return _MonsterMinting.Contract.AutoBirthFee(&_MonsterMinting.CallOpts)
}

// AutoBirthFee is a free data retrieval call binding the contract method 0xb0c35c05.
//
// Solidity: function autoBirthFee() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) AutoBirthFee() (*big.Int, error) {
	return _MonsterMinting.Contract.AutoBirthFee(&_MonsterMinting.CallOpts)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(_owner address) constant returns(count uint256)
func (_MonsterMinting *MonsterMintingCaller) BalanceOf(opts *bind.CallOpts, _owner common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "balanceOf", _owner)
	return *ret0, err
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(_owner address) constant returns(count uint256)
func (_MonsterMinting *MonsterMintingSession) BalanceOf(_owner common.Address) (*big.Int, error) {
	return _MonsterMinting.Contract.BalanceOf(&_MonsterMinting.CallOpts, _owner)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(_owner address) constant returns(count uint256)
func (_MonsterMinting *MonsterMintingCallerSession) BalanceOf(_owner common.Address) (*big.Int, error) {
	return _MonsterMinting.Contract.BalanceOf(&_MonsterMinting.CallOpts, _owner)
}

// CanBreedWith is a free data retrieval call binding the contract method 0x46d22c70.
//
// Solidity: function canBreedWith(_matronId uint256, _sireId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingCaller) CanBreedWith(opts *bind.CallOpts, _matronId *big.Int, _sireId *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "canBreedWith", _matronId, _sireId)
	return *ret0, err
}

// CanBreedWith is a free data retrieval call binding the contract method 0x46d22c70.
//
// Solidity: function canBreedWith(_matronId uint256, _sireId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingSession) CanBreedWith(_matronId *big.Int, _sireId *big.Int) (bool, error) {
	return _MonsterMinting.Contract.CanBreedWith(&_MonsterMinting.CallOpts, _matronId, _sireId)
}

// CanBreedWith is a free data retrieval call binding the contract method 0x46d22c70.
//
// Solidity: function canBreedWith(_matronId uint256, _sireId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingCallerSession) CanBreedWith(_matronId *big.Int, _sireId *big.Int) (bool, error) {
	return _MonsterMinting.Contract.CanBreedWith(&_MonsterMinting.CallOpts, _matronId, _sireId)
}

// CeoAddress is a free data retrieval call binding the contract method 0x0a0f8168.
//
// Solidity: function ceoAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) CeoAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "ceoAddress")
	return *ret0, err
}

// CeoAddress is a free data retrieval call binding the contract method 0x0a0f8168.
//
// Solidity: function ceoAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingSession) CeoAddress() (common.Address, error) {
	return _MonsterMinting.Contract.CeoAddress(&_MonsterMinting.CallOpts)
}

// CeoAddress is a free data retrieval call binding the contract method 0x0a0f8168.
//
// Solidity: function ceoAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) CeoAddress() (common.Address, error) {
	return _MonsterMinting.Contract.CeoAddress(&_MonsterMinting.CallOpts)
}

// CfoAddress is a free data retrieval call binding the contract method 0x0519ce79.
//
// Solidity: function cfoAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) CfoAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "cfoAddress")
	return *ret0, err
}

// CfoAddress is a free data retrieval call binding the contract method 0x0519ce79.
//
// Solidity: function cfoAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingSession) CfoAddress() (common.Address, error) {
	return _MonsterMinting.Contract.CfoAddress(&_MonsterMinting.CallOpts)
}

// CfoAddress is a free data retrieval call binding the contract method 0x0519ce79.
//
// Solidity: function cfoAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) CfoAddress() (common.Address, error) {
	return _MonsterMinting.Contract.CfoAddress(&_MonsterMinting.CallOpts)
}

// CooAddress is a free data retrieval call binding the contract method 0xb047fb50.
//
// Solidity: function cooAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) CooAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "cooAddress")
	return *ret0, err
}

// CooAddress is a free data retrieval call binding the contract method 0xb047fb50.
//
// Solidity: function cooAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingSession) CooAddress() (common.Address, error) {
	return _MonsterMinting.Contract.CooAddress(&_MonsterMinting.CallOpts)
}

// CooAddress is a free data retrieval call binding the contract method 0xb047fb50.
//
// Solidity: function cooAddress() constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) CooAddress() (common.Address, error) {
	return _MonsterMinting.Contract.CooAddress(&_MonsterMinting.CallOpts)
}

// Cooldowns is a free data retrieval call binding the contract method 0x9d6fac6f.
//
// Solidity: function cooldowns( uint256) constant returns(uint32)
func (_MonsterMinting *MonsterMintingCaller) Cooldowns(opts *bind.CallOpts, arg0 *big.Int) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "cooldowns", arg0)
	return *ret0, err
}

// Cooldowns is a free data retrieval call binding the contract method 0x9d6fac6f.
//
// Solidity: function cooldowns( uint256) constant returns(uint32)
func (_MonsterMinting *MonsterMintingSession) Cooldowns(arg0 *big.Int) (uint32, error) {
	return _MonsterMinting.Contract.Cooldowns(&_MonsterMinting.CallOpts, arg0)
}

// Cooldowns is a free data retrieval call binding the contract method 0x9d6fac6f.
//
// Solidity: function cooldowns( uint256) constant returns(uint32)
func (_MonsterMinting *MonsterMintingCallerSession) Cooldowns(arg0 *big.Int) (uint32, error) {
	return _MonsterMinting.Contract.Cooldowns(&_MonsterMinting.CallOpts, arg0)
}

// Erc721Metadata is a free data retrieval call binding the contract method 0xbc4006f5.
//
// Solidity: function erc721Metadata() constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) Erc721Metadata(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "erc721Metadata")
	return *ret0, err
}

// Erc721Metadata is a free data retrieval call binding the contract method 0xbc4006f5.
//
// Solidity: function erc721Metadata() constant returns(address)
func (_MonsterMinting *MonsterMintingSession) Erc721Metadata() (common.Address, error) {
	return _MonsterMinting.Contract.Erc721Metadata(&_MonsterMinting.CallOpts)
}

// Erc721Metadata is a free data retrieval call binding the contract method 0xbc4006f5.
//
// Solidity: function erc721Metadata() constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) Erc721Metadata() (common.Address, error) {
	return _MonsterMinting.Contract.Erc721Metadata(&_MonsterMinting.CallOpts)
}

// Gen0CreatedCount is a free data retrieval call binding the contract method 0xf1ca9410.
//
// Solidity: function gen0CreatedCount() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) Gen0CreatedCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "gen0CreatedCount")
	return *ret0, err
}

// Gen0CreatedCount is a free data retrieval call binding the contract method 0xf1ca9410.
//
// Solidity: function gen0CreatedCount() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) Gen0CreatedCount() (*big.Int, error) {
	return _MonsterMinting.Contract.Gen0CreatedCount(&_MonsterMinting.CallOpts)
}

// Gen0CreatedCount is a free data retrieval call binding the contract method 0xf1ca9410.
//
// Solidity: function gen0CreatedCount() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) Gen0CreatedCount() (*big.Int, error) {
	return _MonsterMinting.Contract.Gen0CreatedCount(&_MonsterMinting.CallOpts)
}

// GeneScience is a free data retrieval call binding the contract method 0xf2b47d52.
//
// Solidity: function geneScience() constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) GeneScience(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "geneScience")
	return *ret0, err
}

// GeneScience is a free data retrieval call binding the contract method 0xf2b47d52.
//
// Solidity: function geneScience() constant returns(address)
func (_MonsterMinting *MonsterMintingSession) GeneScience() (common.Address, error) {
	return _MonsterMinting.Contract.GeneScience(&_MonsterMinting.CallOpts)
}

// GeneScience is a free data retrieval call binding the contract method 0xf2b47d52.
//
// Solidity: function geneScience() constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) GeneScience() (common.Address, error) {
	return _MonsterMinting.Contract.GeneScience(&_MonsterMinting.CallOpts)
}

// IsPregnant is a free data retrieval call binding the contract method 0x1940a936.
//
// Solidity: function isPregnant(_monsterId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingCaller) IsPregnant(opts *bind.CallOpts, _monsterId *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "isPregnant", _monsterId)
	return *ret0, err
}

// IsPregnant is a free data retrieval call binding the contract method 0x1940a936.
//
// Solidity: function isPregnant(_monsterId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingSession) IsPregnant(_monsterId *big.Int) (bool, error) {
	return _MonsterMinting.Contract.IsPregnant(&_MonsterMinting.CallOpts, _monsterId)
}

// IsPregnant is a free data retrieval call binding the contract method 0x1940a936.
//
// Solidity: function isPregnant(_monsterId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingCallerSession) IsPregnant(_monsterId *big.Int) (bool, error) {
	return _MonsterMinting.Contract.IsPregnant(&_MonsterMinting.CallOpts, _monsterId)
}

// IsReadyToBreed is a free data retrieval call binding the contract method 0xd3e6f49f.
//
// Solidity: function isReadyToBreed(_monsterId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingCaller) IsReadyToBreed(opts *bind.CallOpts, _monsterId *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "isReadyToBreed", _monsterId)
	return *ret0, err
}

// IsReadyToBreed is a free data retrieval call binding the contract method 0xd3e6f49f.
//
// Solidity: function isReadyToBreed(_monsterId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingSession) IsReadyToBreed(_monsterId *big.Int) (bool, error) {
	return _MonsterMinting.Contract.IsReadyToBreed(&_MonsterMinting.CallOpts, _monsterId)
}

// IsReadyToBreed is a free data retrieval call binding the contract method 0xd3e6f49f.
//
// Solidity: function isReadyToBreed(_monsterId uint256) constant returns(bool)
func (_MonsterMinting *MonsterMintingCallerSession) IsReadyToBreed(_monsterId *big.Int) (bool, error) {
	return _MonsterMinting.Contract.IsReadyToBreed(&_MonsterMinting.CallOpts, _monsterId)
}

// MonsterIndexToApproved is a free data retrieval call binding the contract method 0x7d55aeea.
//
// Solidity: function monsterIndexToApproved( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) MonsterIndexToApproved(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "monsterIndexToApproved", arg0)
	return *ret0, err
}

// MonsterIndexToApproved is a free data retrieval call binding the contract method 0x7d55aeea.
//
// Solidity: function monsterIndexToApproved( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingSession) MonsterIndexToApproved(arg0 *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.MonsterIndexToApproved(&_MonsterMinting.CallOpts, arg0)
}

// MonsterIndexToApproved is a free data retrieval call binding the contract method 0x7d55aeea.
//
// Solidity: function monsterIndexToApproved( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) MonsterIndexToApproved(arg0 *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.MonsterIndexToApproved(&_MonsterMinting.CallOpts, arg0)
}

// MonsterIndexToOwner is a free data retrieval call binding the contract method 0xad4b558c.
//
// Solidity: function monsterIndexToOwner( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) MonsterIndexToOwner(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "monsterIndexToOwner", arg0)
	return *ret0, err
}

// MonsterIndexToOwner is a free data retrieval call binding the contract method 0xad4b558c.
//
// Solidity: function monsterIndexToOwner( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingSession) MonsterIndexToOwner(arg0 *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.MonsterIndexToOwner(&_MonsterMinting.CallOpts, arg0)
}

// MonsterIndexToOwner is a free data retrieval call binding the contract method 0xad4b558c.
//
// Solidity: function monsterIndexToOwner( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) MonsterIndexToOwner(arg0 *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.MonsterIndexToOwner(&_MonsterMinting.CallOpts, arg0)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_MonsterMinting *MonsterMintingCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_MonsterMinting *MonsterMintingSession) Name() (string, error) {
	return _MonsterMinting.Contract.Name(&_MonsterMinting.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_MonsterMinting *MonsterMintingCallerSession) Name() (string, error) {
	return _MonsterMinting.Contract.Name(&_MonsterMinting.CallOpts)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(_tokenId uint256) constant returns(owner address)
func (_MonsterMinting *MonsterMintingCaller) OwnerOf(opts *bind.CallOpts, _tokenId *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "ownerOf", _tokenId)
	return *ret0, err
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(_tokenId uint256) constant returns(owner address)
func (_MonsterMinting *MonsterMintingSession) OwnerOf(_tokenId *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.OwnerOf(&_MonsterMinting.CallOpts, _tokenId)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(_tokenId uint256) constant returns(owner address)
func (_MonsterMinting *MonsterMintingCallerSession) OwnerOf(_tokenId *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.OwnerOf(&_MonsterMinting.CallOpts, _tokenId)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() constant returns(bool)
func (_MonsterMinting *MonsterMintingCaller) Paused(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "paused")
	return *ret0, err
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() constant returns(bool)
func (_MonsterMinting *MonsterMintingSession) Paused() (bool, error) {
	return _MonsterMinting.Contract.Paused(&_MonsterMinting.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() constant returns(bool)
func (_MonsterMinting *MonsterMintingCallerSession) Paused() (bool, error) {
	return _MonsterMinting.Contract.Paused(&_MonsterMinting.CallOpts)
}

// PregnantMonsters is a free data retrieval call binding the contract method 0xc7e3ff4b.
//
// Solidity: function pregnantMonsters() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) PregnantMonsters(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "pregnantMonsters")
	return *ret0, err
}

// PregnantMonsters is a free data retrieval call binding the contract method 0xc7e3ff4b.
//
// Solidity: function pregnantMonsters() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) PregnantMonsters() (*big.Int, error) {
	return _MonsterMinting.Contract.PregnantMonsters(&_MonsterMinting.CallOpts)
}

// PregnantMonsters is a free data retrieval call binding the contract method 0xc7e3ff4b.
//
// Solidity: function pregnantMonsters() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) PregnantMonsters() (*big.Int, error) {
	return _MonsterMinting.Contract.PregnantMonsters(&_MonsterMinting.CallOpts)
}

// PromoCreatedCount is a free data retrieval call binding the contract method 0x05e45546.
//
// Solidity: function promoCreatedCount() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) PromoCreatedCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "promoCreatedCount")
	return *ret0, err
}

// PromoCreatedCount is a free data retrieval call binding the contract method 0x05e45546.
//
// Solidity: function promoCreatedCount() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) PromoCreatedCount() (*big.Int, error) {
	return _MonsterMinting.Contract.PromoCreatedCount(&_MonsterMinting.CallOpts)
}

// PromoCreatedCount is a free data retrieval call binding the contract method 0x05e45546.
//
// Solidity: function promoCreatedCount() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) PromoCreatedCount() (*big.Int, error) {
	return _MonsterMinting.Contract.PromoCreatedCount(&_MonsterMinting.CallOpts)
}

// SaleAuction is a free data retrieval call binding the contract method 0xe6cbe351.
//
// Solidity: function saleAuction() constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) SaleAuction(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "saleAuction")
	return *ret0, err
}

// SaleAuction is a free data retrieval call binding the contract method 0xe6cbe351.
//
// Solidity: function saleAuction() constant returns(address)
func (_MonsterMinting *MonsterMintingSession) SaleAuction() (common.Address, error) {
	return _MonsterMinting.Contract.SaleAuction(&_MonsterMinting.CallOpts)
}

// SaleAuction is a free data retrieval call binding the contract method 0xe6cbe351.
//
// Solidity: function saleAuction() constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) SaleAuction() (common.Address, error) {
	return _MonsterMinting.Contract.SaleAuction(&_MonsterMinting.CallOpts)
}

// SecondsPerBlock is a free data retrieval call binding the contract method 0x7a7d4937.
//
// Solidity: function secondsPerBlock() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) SecondsPerBlock(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "secondsPerBlock")
	return *ret0, err
}

// SecondsPerBlock is a free data retrieval call binding the contract method 0x7a7d4937.
//
// Solidity: function secondsPerBlock() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) SecondsPerBlock() (*big.Int, error) {
	return _MonsterMinting.Contract.SecondsPerBlock(&_MonsterMinting.CallOpts)
}

// SecondsPerBlock is a free data retrieval call binding the contract method 0x7a7d4937.
//
// Solidity: function secondsPerBlock() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) SecondsPerBlock() (*big.Int, error) {
	return _MonsterMinting.Contract.SecondsPerBlock(&_MonsterMinting.CallOpts)
}

// SireAllowedToAddress is a free data retrieval call binding the contract method 0x46116e6f.
//
// Solidity: function sireAllowedToAddress( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) SireAllowedToAddress(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "sireAllowedToAddress", arg0)
	return *ret0, err
}

// SireAllowedToAddress is a free data retrieval call binding the contract method 0x46116e6f.
//
// Solidity: function sireAllowedToAddress( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingSession) SireAllowedToAddress(arg0 *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.SireAllowedToAddress(&_MonsterMinting.CallOpts, arg0)
}

// SireAllowedToAddress is a free data retrieval call binding the contract method 0x46116e6f.
//
// Solidity: function sireAllowedToAddress( uint256) constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) SireAllowedToAddress(arg0 *big.Int) (common.Address, error) {
	return _MonsterMinting.Contract.SireAllowedToAddress(&_MonsterMinting.CallOpts, arg0)
}

// SiringAuction is a free data retrieval call binding the contract method 0x21717ebf.
//
// Solidity: function siringAuction() constant returns(address)
func (_MonsterMinting *MonsterMintingCaller) SiringAuction(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "siringAuction")
	return *ret0, err
}

// SiringAuction is a free data retrieval call binding the contract method 0x21717ebf.
//
// Solidity: function siringAuction() constant returns(address)
func (_MonsterMinting *MonsterMintingSession) SiringAuction() (common.Address, error) {
	return _MonsterMinting.Contract.SiringAuction(&_MonsterMinting.CallOpts)
}

// SiringAuction is a free data retrieval call binding the contract method 0x21717ebf.
//
// Solidity: function siringAuction() constant returns(address)
func (_MonsterMinting *MonsterMintingCallerSession) SiringAuction() (common.Address, error) {
	return _MonsterMinting.Contract.SiringAuction(&_MonsterMinting.CallOpts)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(_interfaceID bytes4) constant returns(bool)
func (_MonsterMinting *MonsterMintingCaller) SupportsInterface(opts *bind.CallOpts, _interfaceID [4]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "supportsInterface", _interfaceID)
	return *ret0, err
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(_interfaceID bytes4) constant returns(bool)
func (_MonsterMinting *MonsterMintingSession) SupportsInterface(_interfaceID [4]byte) (bool, error) {
	return _MonsterMinting.Contract.SupportsInterface(&_MonsterMinting.CallOpts, _interfaceID)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(_interfaceID bytes4) constant returns(bool)
func (_MonsterMinting *MonsterMintingCallerSession) SupportsInterface(_interfaceID [4]byte) (bool, error) {
	return _MonsterMinting.Contract.SupportsInterface(&_MonsterMinting.CallOpts, _interfaceID)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_MonsterMinting *MonsterMintingCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "symbol")
	return *ret0, err
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_MonsterMinting *MonsterMintingSession) Symbol() (string, error) {
	return _MonsterMinting.Contract.Symbol(&_MonsterMinting.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_MonsterMinting *MonsterMintingCallerSession) Symbol() (string, error) {
	return _MonsterMinting.Contract.Symbol(&_MonsterMinting.CallOpts)
}

// TokenMetadata is a free data retrieval call binding the contract method 0x0560ff44.
//
// Solidity: function tokenMetadata(_tokenId uint256, _preferredTransport string) constant returns(infoUrl string)
func (_MonsterMinting *MonsterMintingCaller) TokenMetadata(opts *bind.CallOpts, _tokenId *big.Int, _preferredTransport string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "tokenMetadata", _tokenId, _preferredTransport)
	return *ret0, err
}

// TokenMetadata is a free data retrieval call binding the contract method 0x0560ff44.
//
// Solidity: function tokenMetadata(_tokenId uint256, _preferredTransport string) constant returns(infoUrl string)
func (_MonsterMinting *MonsterMintingSession) TokenMetadata(_tokenId *big.Int, _preferredTransport string) (string, error) {
	return _MonsterMinting.Contract.TokenMetadata(&_MonsterMinting.CallOpts, _tokenId, _preferredTransport)
}

// TokenMetadata is a free data retrieval call binding the contract method 0x0560ff44.
//
// Solidity: function tokenMetadata(_tokenId uint256, _preferredTransport string) constant returns(infoUrl string)
func (_MonsterMinting *MonsterMintingCallerSession) TokenMetadata(_tokenId *big.Int, _preferredTransport string) (string, error) {
	return _MonsterMinting.Contract.TokenMetadata(&_MonsterMinting.CallOpts, _tokenId, _preferredTransport)
}

// TokensOfOwner is a free data retrieval call binding the contract method 0x8462151c.
//
// Solidity: function tokensOfOwner(_owner address) constant returns(ownerTokens uint256[])
func (_MonsterMinting *MonsterMintingCaller) TokensOfOwner(opts *bind.CallOpts, _owner common.Address) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "tokensOfOwner", _owner)
	return *ret0, err
}

// TokensOfOwner is a free data retrieval call binding the contract method 0x8462151c.
//
// Solidity: function tokensOfOwner(_owner address) constant returns(ownerTokens uint256[])
func (_MonsterMinting *MonsterMintingSession) TokensOfOwner(_owner common.Address) ([]*big.Int, error) {
	return _MonsterMinting.Contract.TokensOfOwner(&_MonsterMinting.CallOpts, _owner)
}

// TokensOfOwner is a free data retrieval call binding the contract method 0x8462151c.
//
// Solidity: function tokensOfOwner(_owner address) constant returns(ownerTokens uint256[])
func (_MonsterMinting *MonsterMintingCallerSession) TokensOfOwner(_owner common.Address) ([]*big.Int, error) {
	return _MonsterMinting.Contract.TokensOfOwner(&_MonsterMinting.CallOpts, _owner)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MonsterMinting.contract.Call(opts, out, "totalSupply")
	return *ret0, err
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_MonsterMinting *MonsterMintingSession) TotalSupply() (*big.Int, error) {
	return _MonsterMinting.Contract.TotalSupply(&_MonsterMinting.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_MonsterMinting *MonsterMintingCallerSession) TotalSupply() (*big.Int, error) {
	return _MonsterMinting.Contract.TotalSupply(&_MonsterMinting.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(_to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) Approve(opts *bind.TransactOpts, _to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "approve", _to, _tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(_to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingSession) Approve(_to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.Approve(&_MonsterMinting.TransactOpts, _to, _tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(_to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) Approve(_to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.Approve(&_MonsterMinting.TransactOpts, _to, _tokenId)
}

// ApproveSiring is a paid mutator transaction binding the contract method 0x4dfff04f.
//
// Solidity: function approveSiring(_addr address, _sireId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) ApproveSiring(opts *bind.TransactOpts, _addr common.Address, _sireId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "approveSiring", _addr, _sireId)
}

// ApproveSiring is a paid mutator transaction binding the contract method 0x4dfff04f.
//
// Solidity: function approveSiring(_addr address, _sireId uint256) returns()
func (_MonsterMinting *MonsterMintingSession) ApproveSiring(_addr common.Address, _sireId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.ApproveSiring(&_MonsterMinting.TransactOpts, _addr, _sireId)
}

// ApproveSiring is a paid mutator transaction binding the contract method 0x4dfff04f.
//
// Solidity: function approveSiring(_addr address, _sireId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) ApproveSiring(_addr common.Address, _sireId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.ApproveSiring(&_MonsterMinting.TransactOpts, _addr, _sireId)
}

// BidOnSiringAuction is a paid mutator transaction binding the contract method 0xed60ade6.
//
// Solidity: function bidOnSiringAuction(_sireId uint256, _matronId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) BidOnSiringAuction(opts *bind.TransactOpts, _sireId *big.Int, _matronId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "bidOnSiringAuction", _sireId, _matronId)
}

// BidOnSiringAuction is a paid mutator transaction binding the contract method 0xed60ade6.
//
// Solidity: function bidOnSiringAuction(_sireId uint256, _matronId uint256) returns()
func (_MonsterMinting *MonsterMintingSession) BidOnSiringAuction(_sireId *big.Int, _matronId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.BidOnSiringAuction(&_MonsterMinting.TransactOpts, _sireId, _matronId)
}

// BidOnSiringAuction is a paid mutator transaction binding the contract method 0xed60ade6.
//
// Solidity: function bidOnSiringAuction(_sireId uint256, _matronId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) BidOnSiringAuction(_sireId *big.Int, _matronId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.BidOnSiringAuction(&_MonsterMinting.TransactOpts, _sireId, _matronId)
}

// BreedWithAuto is a paid mutator transaction binding the contract method 0xf7d8c883.
//
// Solidity: function breedWithAuto(_matronId uint256, _sireId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) BreedWithAuto(opts *bind.TransactOpts, _matronId *big.Int, _sireId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "breedWithAuto", _matronId, _sireId)
}

// BreedWithAuto is a paid mutator transaction binding the contract method 0xf7d8c883.
//
// Solidity: function breedWithAuto(_matronId uint256, _sireId uint256) returns()
func (_MonsterMinting *MonsterMintingSession) BreedWithAuto(_matronId *big.Int, _sireId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.BreedWithAuto(&_MonsterMinting.TransactOpts, _matronId, _sireId)
}

// BreedWithAuto is a paid mutator transaction binding the contract method 0xf7d8c883.
//
// Solidity: function breedWithAuto(_matronId uint256, _sireId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) BreedWithAuto(_matronId *big.Int, _sireId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.BreedWithAuto(&_MonsterMinting.TransactOpts, _matronId, _sireId)
}

// CreateGen0Auction is a paid mutator transaction binding the contract method 0xc3bea9af.
//
// Solidity: function createGen0Auction(_genes uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) CreateGen0Auction(opts *bind.TransactOpts, _genes *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "createGen0Auction", _genes)
}

// CreateGen0Auction is a paid mutator transaction binding the contract method 0xc3bea9af.
//
// Solidity: function createGen0Auction(_genes uint256) returns()
func (_MonsterMinting *MonsterMintingSession) CreateGen0Auction(_genes *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreateGen0Auction(&_MonsterMinting.TransactOpts, _genes)
}

// CreateGen0Auction is a paid mutator transaction binding the contract method 0xc3bea9af.
//
// Solidity: function createGen0Auction(_genes uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) CreateGen0Auction(_genes *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreateGen0Auction(&_MonsterMinting.TransactOpts, _genes)
}

// CreatePromoMonster is a paid mutator transaction binding the contract method 0x8b56aff8.
//
// Solidity: function createPromoMonster(_genes uint256, _owner address) returns()
func (_MonsterMinting *MonsterMintingTransactor) CreatePromoMonster(opts *bind.TransactOpts, _genes *big.Int, _owner common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "createPromoMonster", _genes, _owner)
}

// CreatePromoMonster is a paid mutator transaction binding the contract method 0x8b56aff8.
//
// Solidity: function createPromoMonster(_genes uint256, _owner address) returns()
func (_MonsterMinting *MonsterMintingSession) CreatePromoMonster(_genes *big.Int, _owner common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreatePromoMonster(&_MonsterMinting.TransactOpts, _genes, _owner)
}

// CreatePromoMonster is a paid mutator transaction binding the contract method 0x8b56aff8.
//
// Solidity: function createPromoMonster(_genes uint256, _owner address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) CreatePromoMonster(_genes *big.Int, _owner common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreatePromoMonster(&_MonsterMinting.TransactOpts, _genes, _owner)
}

// CreateSaleAuction is a paid mutator transaction binding the contract method 0x3d7d3f5a.
//
// Solidity: function createSaleAuction(_monsterId uint256, _startingPrice uint256, _endingPrice uint256, _duration uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) CreateSaleAuction(opts *bind.TransactOpts, _monsterId *big.Int, _startingPrice *big.Int, _endingPrice *big.Int, _duration *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "createSaleAuction", _monsterId, _startingPrice, _endingPrice, _duration)
}

// CreateSaleAuction is a paid mutator transaction binding the contract method 0x3d7d3f5a.
//
// Solidity: function createSaleAuction(_monsterId uint256, _startingPrice uint256, _endingPrice uint256, _duration uint256) returns()
func (_MonsterMinting *MonsterMintingSession) CreateSaleAuction(_monsterId *big.Int, _startingPrice *big.Int, _endingPrice *big.Int, _duration *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreateSaleAuction(&_MonsterMinting.TransactOpts, _monsterId, _startingPrice, _endingPrice, _duration)
}

// CreateSaleAuction is a paid mutator transaction binding the contract method 0x3d7d3f5a.
//
// Solidity: function createSaleAuction(_monsterId uint256, _startingPrice uint256, _endingPrice uint256, _duration uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) CreateSaleAuction(_monsterId *big.Int, _startingPrice *big.Int, _endingPrice *big.Int, _duration *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreateSaleAuction(&_MonsterMinting.TransactOpts, _monsterId, _startingPrice, _endingPrice, _duration)
}

// CreateSiringAuction is a paid mutator transaction binding the contract method 0x4ad8c938.
//
// Solidity: function createSiringAuction(_monsterId uint256, _startingPrice uint256, _endingPrice uint256, _duration uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) CreateSiringAuction(opts *bind.TransactOpts, _monsterId *big.Int, _startingPrice *big.Int, _endingPrice *big.Int, _duration *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "createSiringAuction", _monsterId, _startingPrice, _endingPrice, _duration)
}

// CreateSiringAuction is a paid mutator transaction binding the contract method 0x4ad8c938.
//
// Solidity: function createSiringAuction(_monsterId uint256, _startingPrice uint256, _endingPrice uint256, _duration uint256) returns()
func (_MonsterMinting *MonsterMintingSession) CreateSiringAuction(_monsterId *big.Int, _startingPrice *big.Int, _endingPrice *big.Int, _duration *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreateSiringAuction(&_MonsterMinting.TransactOpts, _monsterId, _startingPrice, _endingPrice, _duration)
}

// CreateSiringAuction is a paid mutator transaction binding the contract method 0x4ad8c938.
//
// Solidity: function createSiringAuction(_monsterId uint256, _startingPrice uint256, _endingPrice uint256, _duration uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) CreateSiringAuction(_monsterId *big.Int, _startingPrice *big.Int, _endingPrice *big.Int, _duration *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.CreateSiringAuction(&_MonsterMinting.TransactOpts, _monsterId, _startingPrice, _endingPrice, _duration)
}

// GiveBirth is a paid mutator transaction binding the contract method 0x88c2a0bf.
//
// Solidity: function giveBirth(_matronId uint256) returns(uint256)
func (_MonsterMinting *MonsterMintingTransactor) GiveBirth(opts *bind.TransactOpts, _matronId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "giveBirth", _matronId)
}

// GiveBirth is a paid mutator transaction binding the contract method 0x88c2a0bf.
//
// Solidity: function giveBirth(_matronId uint256) returns(uint256)
func (_MonsterMinting *MonsterMintingSession) GiveBirth(_matronId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.GiveBirth(&_MonsterMinting.TransactOpts, _matronId)
}

// GiveBirth is a paid mutator transaction binding the contract method 0x88c2a0bf.
//
// Solidity: function giveBirth(_matronId uint256) returns(uint256)
func (_MonsterMinting *MonsterMintingTransactorSession) GiveBirth(_matronId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.GiveBirth(&_MonsterMinting.TransactOpts, _matronId)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_MonsterMinting *MonsterMintingTransactor) Pause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "pause")
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_MonsterMinting *MonsterMintingSession) Pause() (*types.Transaction, error) {
	return _MonsterMinting.Contract.Pause(&_MonsterMinting.TransactOpts)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_MonsterMinting *MonsterMintingTransactorSession) Pause() (*types.Transaction, error) {
	return _MonsterMinting.Contract.Pause(&_MonsterMinting.TransactOpts)
}

// SetAutoBirthFee is a paid mutator transaction binding the contract method 0x4b85fd55.
//
// Solidity: function setAutoBirthFee(val uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetAutoBirthFee(opts *bind.TransactOpts, val *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setAutoBirthFee", val)
}

// SetAutoBirthFee is a paid mutator transaction binding the contract method 0x4b85fd55.
//
// Solidity: function setAutoBirthFee(val uint256) returns()
func (_MonsterMinting *MonsterMintingSession) SetAutoBirthFee(val *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetAutoBirthFee(&_MonsterMinting.TransactOpts, val)
}

// SetAutoBirthFee is a paid mutator transaction binding the contract method 0x4b85fd55.
//
// Solidity: function setAutoBirthFee(val uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetAutoBirthFee(val *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetAutoBirthFee(&_MonsterMinting.TransactOpts, val)
}

// SetCEO is a paid mutator transaction binding the contract method 0x27d7874c.
//
// Solidity: function setCEO(_newCEO address) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetCEO(opts *bind.TransactOpts, _newCEO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setCEO", _newCEO)
}

// SetCEO is a paid mutator transaction binding the contract method 0x27d7874c.
//
// Solidity: function setCEO(_newCEO address) returns()
func (_MonsterMinting *MonsterMintingSession) SetCEO(_newCEO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetCEO(&_MonsterMinting.TransactOpts, _newCEO)
}

// SetCEO is a paid mutator transaction binding the contract method 0x27d7874c.
//
// Solidity: function setCEO(_newCEO address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetCEO(_newCEO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetCEO(&_MonsterMinting.TransactOpts, _newCEO)
}

// SetCFO is a paid mutator transaction binding the contract method 0x4e0a3379.
//
// Solidity: function setCFO(_newCFO address) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetCFO(opts *bind.TransactOpts, _newCFO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setCFO", _newCFO)
}

// SetCFO is a paid mutator transaction binding the contract method 0x4e0a3379.
//
// Solidity: function setCFO(_newCFO address) returns()
func (_MonsterMinting *MonsterMintingSession) SetCFO(_newCFO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetCFO(&_MonsterMinting.TransactOpts, _newCFO)
}

// SetCFO is a paid mutator transaction binding the contract method 0x4e0a3379.
//
// Solidity: function setCFO(_newCFO address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetCFO(_newCFO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetCFO(&_MonsterMinting.TransactOpts, _newCFO)
}

// SetCOO is a paid mutator transaction binding the contract method 0x2ba73c15.
//
// Solidity: function setCOO(_newCOO address) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetCOO(opts *bind.TransactOpts, _newCOO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setCOO", _newCOO)
}

// SetCOO is a paid mutator transaction binding the contract method 0x2ba73c15.
//
// Solidity: function setCOO(_newCOO address) returns()
func (_MonsterMinting *MonsterMintingSession) SetCOO(_newCOO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetCOO(&_MonsterMinting.TransactOpts, _newCOO)
}

// SetCOO is a paid mutator transaction binding the contract method 0x2ba73c15.
//
// Solidity: function setCOO(_newCOO address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetCOO(_newCOO common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetCOO(&_MonsterMinting.TransactOpts, _newCOO)
}

// SetGeneScienceAddress is a paid mutator transaction binding the contract method 0x24e7a38a.
//
// Solidity: function setGeneScienceAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetGeneScienceAddress(opts *bind.TransactOpts, _address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setGeneScienceAddress", _address)
}

// SetGeneScienceAddress is a paid mutator transaction binding the contract method 0x24e7a38a.
//
// Solidity: function setGeneScienceAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingSession) SetGeneScienceAddress(_address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetGeneScienceAddress(&_MonsterMinting.TransactOpts, _address)
}

// SetGeneScienceAddress is a paid mutator transaction binding the contract method 0x24e7a38a.
//
// Solidity: function setGeneScienceAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetGeneScienceAddress(_address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetGeneScienceAddress(&_MonsterMinting.TransactOpts, _address)
}

// SetMetadataAddress is a paid mutator transaction binding the contract method 0xe17b25af.
//
// Solidity: function setMetadataAddress(_contractAddress address) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetMetadataAddress(opts *bind.TransactOpts, _contractAddress common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setMetadataAddress", _contractAddress)
}

// SetMetadataAddress is a paid mutator transaction binding the contract method 0xe17b25af.
//
// Solidity: function setMetadataAddress(_contractAddress address) returns()
func (_MonsterMinting *MonsterMintingSession) SetMetadataAddress(_contractAddress common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetMetadataAddress(&_MonsterMinting.TransactOpts, _contractAddress)
}

// SetMetadataAddress is a paid mutator transaction binding the contract method 0xe17b25af.
//
// Solidity: function setMetadataAddress(_contractAddress address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetMetadataAddress(_contractAddress common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetMetadataAddress(&_MonsterMinting.TransactOpts, _contractAddress)
}

// SetSaleAuctionAddress is a paid mutator transaction binding the contract method 0x6fbde40d.
//
// Solidity: function setSaleAuctionAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetSaleAuctionAddress(opts *bind.TransactOpts, _address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setSaleAuctionAddress", _address)
}

// SetSaleAuctionAddress is a paid mutator transaction binding the contract method 0x6fbde40d.
//
// Solidity: function setSaleAuctionAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingSession) SetSaleAuctionAddress(_address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetSaleAuctionAddress(&_MonsterMinting.TransactOpts, _address)
}

// SetSaleAuctionAddress is a paid mutator transaction binding the contract method 0x6fbde40d.
//
// Solidity: function setSaleAuctionAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetSaleAuctionAddress(_address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetSaleAuctionAddress(&_MonsterMinting.TransactOpts, _address)
}

// SetSecondsPerBlock is a paid mutator transaction binding the contract method 0x5663896e.
//
// Solidity: function setSecondsPerBlock(secs uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetSecondsPerBlock(opts *bind.TransactOpts, secs *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setSecondsPerBlock", secs)
}

// SetSecondsPerBlock is a paid mutator transaction binding the contract method 0x5663896e.
//
// Solidity: function setSecondsPerBlock(secs uint256) returns()
func (_MonsterMinting *MonsterMintingSession) SetSecondsPerBlock(secs *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetSecondsPerBlock(&_MonsterMinting.TransactOpts, secs)
}

// SetSecondsPerBlock is a paid mutator transaction binding the contract method 0x5663896e.
//
// Solidity: function setSecondsPerBlock(secs uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetSecondsPerBlock(secs *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetSecondsPerBlock(&_MonsterMinting.TransactOpts, secs)
}

// SetSiringAuctionAddress is a paid mutator transaction binding the contract method 0x14001f4c.
//
// Solidity: function setSiringAuctionAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingTransactor) SetSiringAuctionAddress(opts *bind.TransactOpts, _address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "setSiringAuctionAddress", _address)
}

// SetSiringAuctionAddress is a paid mutator transaction binding the contract method 0x14001f4c.
//
// Solidity: function setSiringAuctionAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingSession) SetSiringAuctionAddress(_address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetSiringAuctionAddress(&_MonsterMinting.TransactOpts, _address)
}

// SetSiringAuctionAddress is a paid mutator transaction binding the contract method 0x14001f4c.
//
// Solidity: function setSiringAuctionAddress(_address address) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) SetSiringAuctionAddress(_address common.Address) (*types.Transaction, error) {
	return _MonsterMinting.Contract.SetSiringAuctionAddress(&_MonsterMinting.TransactOpts, _address)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(_to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) Transfer(opts *bind.TransactOpts, _to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "transfer", _to, _tokenId)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(_to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingSession) Transfer(_to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.Transfer(&_MonsterMinting.TransactOpts, _to, _tokenId)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(_to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) Transfer(_to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.Transfer(&_MonsterMinting.TransactOpts, _to, _tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(_from address, _to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactor) TransferFrom(opts *bind.TransactOpts, _from common.Address, _to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "transferFrom", _from, _to, _tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(_from address, _to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingSession) TransferFrom(_from common.Address, _to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.TransferFrom(&_MonsterMinting.TransactOpts, _from, _to, _tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(_from address, _to address, _tokenId uint256) returns()
func (_MonsterMinting *MonsterMintingTransactorSession) TransferFrom(_from common.Address, _to common.Address, _tokenId *big.Int) (*types.Transaction, error) {
	return _MonsterMinting.Contract.TransferFrom(&_MonsterMinting.TransactOpts, _from, _to, _tokenId)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_MonsterMinting *MonsterMintingTransactor) Unpause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "unpause")
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_MonsterMinting *MonsterMintingSession) Unpause() (*types.Transaction, error) {
	return _MonsterMinting.Contract.Unpause(&_MonsterMinting.TransactOpts)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_MonsterMinting *MonsterMintingTransactorSession) Unpause() (*types.Transaction, error) {
	return _MonsterMinting.Contract.Unpause(&_MonsterMinting.TransactOpts)
}

// WithdrawAuctionBalances is a paid mutator transaction binding the contract method 0x91876e57.
//
// Solidity: function withdrawAuctionBalances() returns()
func (_MonsterMinting *MonsterMintingTransactor) WithdrawAuctionBalances(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MonsterMinting.contract.Transact(opts, "withdrawAuctionBalances")
}

// WithdrawAuctionBalances is a paid mutator transaction binding the contract method 0x91876e57.
//
// Solidity: function withdrawAuctionBalances() returns()
func (_MonsterMinting *MonsterMintingSession) WithdrawAuctionBalances() (*types.Transaction, error) {
	return _MonsterMinting.Contract.WithdrawAuctionBalances(&_MonsterMinting.TransactOpts)
}

// WithdrawAuctionBalances is a paid mutator transaction binding the contract method 0x91876e57.
//
// Solidity: function withdrawAuctionBalances() returns()
func (_MonsterMinting *MonsterMintingTransactorSession) WithdrawAuctionBalances() (*types.Transaction, error) {
	return _MonsterMinting.Contract.WithdrawAuctionBalances(&_MonsterMinting.TransactOpts)
}

// MonsterMintingApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the MonsterMinting contract.
type MonsterMintingApprovalIterator struct {
	Event *MonsterMintingApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MonsterMintingApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MonsterMintingApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MonsterMintingApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MonsterMintingApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MonsterMintingApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MonsterMintingApproval represents a Approval event raised by the MonsterMinting contract.
type MonsterMintingApproval struct {
	Owner    common.Address
	Approved common.Address
	TokenId  *big.Int
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: e Approval(owner address, approved address, tokenId uint256)
func (_MonsterMinting *MonsterMintingFilterer) FilterApproval(opts *bind.FilterOpts) (*MonsterMintingApprovalIterator, error) {

	logs, sub, err := _MonsterMinting.contract.FilterLogs(opts, "Approval")
	if err != nil {
		return nil, err
	}
	return &MonsterMintingApprovalIterator{contract: _MonsterMinting.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: e Approval(owner address, approved address, tokenId uint256)
func (_MonsterMinting *MonsterMintingFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *MonsterMintingApproval) (event.Subscription, error) {

	logs, sub, err := _MonsterMinting.contract.WatchLogs(opts, "Approval")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MonsterMintingApproval)
				if err := _MonsterMinting.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MonsterMintingBirthIterator is returned from FilterBirth and is used to iterate over the raw logs and unpacked data for Birth events raised by the MonsterMinting contract.
type MonsterMintingBirthIterator struct {
	Event *MonsterMintingBirth // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MonsterMintingBirthIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MonsterMintingBirth)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MonsterMintingBirth)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MonsterMintingBirthIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MonsterMintingBirthIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MonsterMintingBirth represents a Birth event raised by the MonsterMinting contract.
type MonsterMintingBirth struct {
	Owner     common.Address
	MonsterId *big.Int
	MatronId  *big.Int
	SireId    *big.Int
	Genes     *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBirth is a free log retrieval operation binding the contract event 0x0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad5.
//
// Solidity: e Birth(owner address, MonsterId uint256, matronId uint256, sireId uint256, genes uint256)
func (_MonsterMinting *MonsterMintingFilterer) FilterBirth(opts *bind.FilterOpts) (*MonsterMintingBirthIterator, error) {

	logs, sub, err := _MonsterMinting.contract.FilterLogs(opts, "Birth")
	if err != nil {
		return nil, err
	}
	return &MonsterMintingBirthIterator{contract: _MonsterMinting.contract, event: "Birth", logs: logs, sub: sub}, nil
}

// WatchBirth is a free log subscription operation binding the contract event 0x0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad5.
//
// Solidity: e Birth(owner address, MonsterId uint256, matronId uint256, sireId uint256, genes uint256)
func (_MonsterMinting *MonsterMintingFilterer) WatchBirth(opts *bind.WatchOpts, sink chan<- *MonsterMintingBirth) (event.Subscription, error) {

	logs, sub, err := _MonsterMinting.contract.WatchLogs(opts, "Birth")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MonsterMintingBirth)
				if err := _MonsterMinting.contract.UnpackLog(event, "Birth", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MonsterMintingContractUpgradeIterator is returned from FilterContractUpgrade and is used to iterate over the raw logs and unpacked data for ContractUpgrade events raised by the MonsterMinting contract.
type MonsterMintingContractUpgradeIterator struct {
	Event *MonsterMintingContractUpgrade // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MonsterMintingContractUpgradeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MonsterMintingContractUpgrade)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MonsterMintingContractUpgrade)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MonsterMintingContractUpgradeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MonsterMintingContractUpgradeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MonsterMintingContractUpgrade represents a ContractUpgrade event raised by the MonsterMinting contract.
type MonsterMintingContractUpgrade struct {
	NewContract common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterContractUpgrade is a free log retrieval operation binding the contract event 0x450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa446199305.
//
// Solidity: e ContractUpgrade(newContract address)
func (_MonsterMinting *MonsterMintingFilterer) FilterContractUpgrade(opts *bind.FilterOpts) (*MonsterMintingContractUpgradeIterator, error) {

	logs, sub, err := _MonsterMinting.contract.FilterLogs(opts, "ContractUpgrade")
	if err != nil {
		return nil, err
	}
	return &MonsterMintingContractUpgradeIterator{contract: _MonsterMinting.contract, event: "ContractUpgrade", logs: logs, sub: sub}, nil
}

// WatchContractUpgrade is a free log subscription operation binding the contract event 0x450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa446199305.
//
// Solidity: e ContractUpgrade(newContract address)
func (_MonsterMinting *MonsterMintingFilterer) WatchContractUpgrade(opts *bind.WatchOpts, sink chan<- *MonsterMintingContractUpgrade) (event.Subscription, error) {

	logs, sub, err := _MonsterMinting.contract.WatchLogs(opts, "ContractUpgrade")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MonsterMintingContractUpgrade)
				if err := _MonsterMinting.contract.UnpackLog(event, "ContractUpgrade", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MonsterMintingPregnantIterator is returned from FilterPregnant and is used to iterate over the raw logs and unpacked data for Pregnant events raised by the MonsterMinting contract.
type MonsterMintingPregnantIterator struct {
	Event *MonsterMintingPregnant // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MonsterMintingPregnantIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MonsterMintingPregnant)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MonsterMintingPregnant)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MonsterMintingPregnantIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MonsterMintingPregnantIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MonsterMintingPregnant represents a Pregnant event raised by the MonsterMinting contract.
type MonsterMintingPregnant struct {
	Owner            common.Address
	MatronId         *big.Int
	SireId           *big.Int
	CooldownEndBlock *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterPregnant is a free log retrieval operation binding the contract event 0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80.
//
// Solidity: e Pregnant(owner address, matronId uint256, sireId uint256, cooldownEndBlock uint256)
func (_MonsterMinting *MonsterMintingFilterer) FilterPregnant(opts *bind.FilterOpts) (*MonsterMintingPregnantIterator, error) {

	logs, sub, err := _MonsterMinting.contract.FilterLogs(opts, "Pregnant")
	if err != nil {
		return nil, err
	}
	return &MonsterMintingPregnantIterator{contract: _MonsterMinting.contract, event: "Pregnant", logs: logs, sub: sub}, nil
}

// WatchPregnant is a free log subscription operation binding the contract event 0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80.
//
// Solidity: e Pregnant(owner address, matronId uint256, sireId uint256, cooldownEndBlock uint256)
func (_MonsterMinting *MonsterMintingFilterer) WatchPregnant(opts *bind.WatchOpts, sink chan<- *MonsterMintingPregnant) (event.Subscription, error) {

	logs, sub, err := _MonsterMinting.contract.WatchLogs(opts, "Pregnant")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MonsterMintingPregnant)
				if err := _MonsterMinting.contract.UnpackLog(event, "Pregnant", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MonsterMintingTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the MonsterMinting contract.
type MonsterMintingTransferIterator struct {
	Event *MonsterMintingTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MonsterMintingTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MonsterMintingTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MonsterMintingTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MonsterMintingTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MonsterMintingTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MonsterMintingTransfer represents a Transfer event raised by the MonsterMinting contract.
type MonsterMintingTransfer struct {
	From    common.Address
	To      common.Address
	TokenId *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: e Transfer(from address, to address, tokenId uint256)
func (_MonsterMinting *MonsterMintingFilterer) FilterTransfer(opts *bind.FilterOpts) (*MonsterMintingTransferIterator, error) {

	logs, sub, err := _MonsterMinting.contract.FilterLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return &MonsterMintingTransferIterator{contract: _MonsterMinting.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: e Transfer(from address, to address, tokenId uint256)
func (_MonsterMinting *MonsterMintingFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *MonsterMintingTransfer) (event.Subscription, error) {

	logs, sub, err := _MonsterMinting.contract.WatchLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MonsterMintingTransfer)
				if err := _MonsterMinting.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
